Attribution Queries 
Learn SQL from Scratch
Sarah Heaps
January 28, 2019



Step 1

SELECT COUNT(DISTINCT utm_campaign)
FROM page_visits;
 
SELECT COUNT(DISTINCT utm_source)
FROM page_visits;
 
SELECT DISTINCT utm_campaign, 
   utm_source
FROM page_visits;




Step 2

SELECT DISTINCT page_name
FROM page_visits;




Step 3

WITH first_touch AS (
    SELECT user_id,
        MIN(timestamp) AS first_touch_at
    FROM page_visits
    GROUP BY user_id)
SELECT ft.user_id,
    ft.first_touch_at,
    pv.utm_source,
pv.utm_campaign,
COUNT(utm_campaign)
FROM first_touch ft
JOIN page_visits pv
    ON ft.user_id = pv.user_id
    AND ft.first_touch_at = pv.timestamp
GROUP BY 4
ORDER BY 5 DESC;




Step 4

WITH last_touch AS (
    SELECT user_id,
        MAX(timestamp) AS last_touch_at
    FROM page_visits
    GROUP BY user_id)
SELECT lt.user_id,
    lt.last_touch_at,
    pv.page_name,
    pv.utm_source,
pv.utm_campaign,
COUNT(utm_campaign)
FROM last_touch lt
JOIN page_visits pv
    ON lt.user_id = pv.user_id
    AND lt.last_touch_at = pv.timestamp
GROUP BY 5
ORDER BY 6 DESC;




Step 5

SELECT COUNT(DISTINCT user_id)
FROM page_visits
WHERE page_name = '4 - purchase';




Step 6

WITH last_touch AS (
    SELECT user_id,
        MAX(timestamp) AS last_touch_at
    FROM page_visits
    GROUP BY user_id)
SELECT lt.user_id,
    lt.last_touch_at,
    pv.utm_source,
pv.utm_campaign,
COUNT(utm_campaign)
FROM last_touch lt
JOIN page_visits pv
    ON lt.user_id = pv.user_id
    AND lt.last_touch_at = pv.timestamp
GROUP BY 4
ORDER BY 5;



